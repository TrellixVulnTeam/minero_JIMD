from datetime import datetime
from flask import render_template, redirect, request, jsonify, abort
import json
import os
import traceback
import sys
import datetime
import logging;
from miner.web.server import app
from miner.components import Whoosh
from miner.web.services import RequestService

logger = logging.getLogger(__name__)
whoosh = Whoosh()

@app.route('/m/<index_name>', methods=['GET', 'POST', 'PUT', 'DELETE'])
def m_document(index_name):
    if request.method == 'GET':
        return jsonify({"documents":whoosh.find_all(index_name)});
    
    if request.method == 'POST' or request.method == 'PUT':
        if not request.json:
            return jsonify({"error":"Valid JSON object is expected in the request body. e.g. { \"id\":\"123\", \"name\":\"John\" } . If \"id\" is not provided, will be generated by the system."})
        document = request.json
        whoosh.index_document(index_name, document)
        return jsonify({"id":document["id"]})
    
    if request.method == 'DELETE':
        if not request.json:
            return jsonify({"error":"Valid JSON object is expected in the request body. e.g. { \"id\":\"123\" }"})
        document = request.json
        if not "id" in document:
            return jsonify({"error":"JSON object in the request body is expected to have 'id' property. e.g. { \"id\":\"123\" }"})
        whoosh.delete_document(index_name, document["id"])
        return "", 200
    pass

@app.route('/m/<index_name>/<id>', methods=['GET', 'POST', 'PUT', 'DELETE'])
def m_document_by_id(index_name, id):
    if request.method == 'GET':
        document = whoosh.find_by_id(index_name, id)
        if document:
            return jsonify(document)
        else:
            abort(404)

    if request.method == 'POST' or request.method == 'PUT':
        if not request.json:
            return jsonify({"error":"Valid JSON object is expected in the request body. e.g. { \"id\":\"123\", \"name\":\"John\" } . If \"id\" is not provided in the the JSON or url, will be generated by the system."})
        document = request.json
        document_id = document.get('id')
        if id and document_id and id != document_id:
            return jsonify({"error":"Id provided in the JSON object { \"id\":\"" + document_id + "\" ...} is different from id in url m/<index>/" + id +". Make sure that they are the same or provide only one of them."})
        if not document_id:
            document['id'] = id
        whoosh.index_document(index_name, document)
        return jsonify({"id":document["id"]})

    if request.method == 'DELETE':
        whoosh.delete_document(index_name, id)
        return "", 200
    pass